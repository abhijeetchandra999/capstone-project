create database movies; -- create a database movies and import data file 
use movies;

-- Describe table
describe movie_data;

-- Add primary key on ID column
alter table movie_data add constraint priadd primary key (id);

-- made a Backup Table 
create table backup_movie_data like movie_data;
insert into backup_movie_data select * from movie_data;

-- Create view where user have access of title,genres,profit
create view movie_earning as  select title,genres,profit from movie_data;

-- Stored Procedure in MySQL -(CRUD)

-- 1. Create means insert data in procedure

delimiter //
      create procedure Movie_data_insert(in  budget1 bigint,in genres1 varchar(300),in id1 int,in title1 varchar(300),in original_language1 varchar(100),
      in popularity1 float,in production_companies1 varchar(300),in production_countries1 varchar(300),in release_date1 varchar(200),in revenue1 bigint,
      in runtime1 int, in status1 varchar(100), in vote_average1 float, in vote_count1 int, in actors1 varchar(300),in director1 varchar(300),in profit1 bigint)
      
begin
       insert into movie_data (budget,genres,id,title,original_language,popularity,production_companies,production_countries,release_date,revenue,
       runtime,status,vote_average,vote_count,actors,director,profit) values (budget1,genres1,id1,title1,original_language1,popularity1,production_companies1,
       production_countries1,release_date1,revenue1,runtime1,status1,vote_average1,vote_count1,actors1,director1,profit1);
       
end //
delimiter ;

call Movie_data_insert(0,"Drama",16506,"The new movie","en",60.6,"Walt Disney Pictures","india","12/7/2025",9726954,150,"Released",8,657,"Rajkumar rao","Gore Verbinski",9726954)

-- 2. Read-(SELECT-Retrieve existing data)


delimiter //
         create procedure Movie_data_Retrieve (in id1 int )
         
begin

select budget,genres,title,original_language,popularity,production_companies,production_countries,release_date,revenue,runtime,
status,vote_average,vote_count,actors,director,profit from movie_data where id= id1;

end //
delimiter ;

call Movie_data_Retrieve(20);


-- Update a data in a procedure

delimiter //
        create procedure Movie_data_update(in revenue1 bigint,in profit1 bigint, in id1 int)
 begin        
      update movie_data set revenue=revenue1,profit=profit1 where  id = id1;
end //
delimiter ;

call Movie_data_update(9900000,9900000,16506)

-- Delete Remove existing data

delimiter //
        create procedure Movie_data_delete(in id1 int)
begin 
     delete from movie_data where id=id1;
end //
delimiter ;

call Movie_data_delete(16506);




-- EDA(Exploratory Data Analysis)

-- 1. What is the average budget of all movies?

select avg(budget) as avg_budget from movie_data;

-- 2. Which are the top 10 most common genres?

select genres,count(*) as "count"  from movie_data group by genres order by count desc limit 10;

-- 3. What is the maximum revenue generated by any movie?

select max(revenue) as "max_revenue" from movie_data;

-- 4. How many movies are in each language?

select original_language,count(*) as count from movie_data group by original_language order by count desc ;

-- 5 What is the average revenue per genre?

select genres,avg(revenue) as "avg_revenue" from movie_data group by genres order by avg_revenue desc ;

-- 6 Which production company has the highest average profit?

select production_companies,max(profit) as "max_profit" from movie_data group by production_companies order by max_profit desc limit 1;

-- 7 How many movies were released each year?

select year(release_date) as "release_year",count(*) as "movie_count" from movie_data group by release_year order by release_year desc;

-- 8 Which directors have directed the most profitable movies (Top 10)?

select director,sum(profit) as "profit" from movie_data group by director order by profit desc limit 10;

-- 9 Which actors consistently appear in high-revenue movies?

select actors,avg(revenue) as "revenue" from movie_data group by actors order by revenue desc limit 10;

-- 10 What are the top 5 most common combinations of genre and status?

select genres,status,count(*) as "count" from movie_data group by genres,status order by count desc limit 5;
